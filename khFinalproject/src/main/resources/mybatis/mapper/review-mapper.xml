<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">
	<insert id="insert" parameterType="ReviewDto">
		insert into review values
		(
		#{movieNo},
		#{memberNo},
		#{reviewContent},
		#{reviewStarpoint},
		sysdate,
		0
		)
	</insert>
	
	<select id="list" parameterType="int" resultType="ReplyVO">
		select r.movie_no,r.member_no,r.review_content,r.review_starpoint,r.review_date,r.review_like,m.member_nick from review r
        join member m on r.member_no = m.member_no where movie_no=#{movieNo}
	</select>
	
	<select id="listByPage" parameterType="int" resultType="ReplyVO">
		select * from (
			select rownum rn, TMP.* from (
				select r.movie_no,r.member_no,r.review_content,r.review_starpoint,r.review_date,r.review_like,m.member_nick from review r
        		join member m on r.member_no = m.member_no where movie_no=#{movieNo} order by r.review_date desc 
			)TMP
		) where rn between #{startRow} and #{endRow}
	</select>
	
	<update id="update" parameterType="ReviewDto">
		update review set review_content = #{reviewContent}, review_starpoint = #{reviewStarpoint}
		where movie_no=#{movieNo} and member_no=#{memberNo}
	</update>
	
	<delete id="delete" parameterType="map">
		delete review where movie_no=#{movieNo} and member_no=#{memberNo}
	</delete>
	
	<update id="replyLike" parameterType="map">
		update review set review_like = 
		(select sum(review_like) from review where movie_no=#{movieNo} and member_no=#{memberNo}) + 1
		where movie_no=#{movieNo} and member_no=#{memberNo}
	</update>
	
	<select id="getByNo" parameterType="map" resultType="ReviewDto">
		select * from review where member_no=#{memberNo} and movie_no=#{movieNo}
	</select>
	
</mapper>