<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lastInfoView">

	<select id="getByTheaterAndDate" parameterType="map" resultType="LastInfoViewDto">
		select * from last_info_view where theater_no = #{theaterNo}
		and to_char(schedule_time_date_time,'YYYY-MM-DD') = #{day}
	</select>
	
	
	<select id="getMovieNo" parameterType="map" resultType="int">
		select distinct(movie_no) from last_info_view 
		where theater_no = #{theaterNo}
		and to_char(schedule_time_date_time,'YYYY-MM-DD') = #{day}
	</select>
	
	<select id="listByMoiveNoForMap" parameterType="map" resultType="LastInfoViewDto">
		select * from last_info_view 
		where theater_no = #{theaterNo}
		and to_char(schedule_time_date_time,'YYYY-MM-DD') = #{day}
		and movie_no = #{movieNo}
	</select>
	
	<select id="hallNoList" parameterType="map" resultType="int">
		select distinct(hall_no) from last_info_view 
		where theater_no = #{theaterNo}
		and to_char(schedule_time_date_time,'YYYY-MM-DD') = #{day}
		and movie_no = #{movieNo}
	</select>
	
	<select id="listByhallNoForMap" parameterType="map" resultType="LastInfoViewDto">
		select * from last_info_view 
		where theater_no = #{theaterNo}
		and to_char(schedule_time_date_time,'YYYY-MM-DD') = #{day}
		and movie_no = #{movieNo}
		and hall_no = #{hallNo}
	</select>
	
	<select id="getByNo" parameterType="int" resultType="LastInfoViewDto">
		select * from last_info_view 
		where schedule_time_no = #{scheduleTimeNo}
	</select>
	
	<select id="countByTotal" resultType="ChartVO">
		select movie_title text ,sum(schedule_time_count) count from(
		select * from last_info_view where schedule_time_count>0
		<![CDATA[and sysdate < schedule_end]]>
		) group by movie_title order by count desc
	</select>
	
	<select id="countByProfit" resultType="ChartVO">
		select movie_title text ,sum(schedule_time_sum) count from(
		select * from last_info_view where schedule_time_sum>0
		<![CDATA[and sysdate < schedule_end]]>
		) group by movie_title order by count desc
	</select>

	<select id="totalProfitByTheater" resultType="ChartVO">
		select theater_name text ,sum(schedule_time_sum) count from(
		select * from last_info_view where schedule_time_sum>0
		<![CDATA[and sysdate < schedule_end]]>
		) group by theater_name order by count desc
	</select>
	
	<select id="totalPeopleByTheater" resultType="ChartVO">
		select theater_name text ,sum(schedule_time_count) count from(
		select * from last_info_view where schedule_time_sum>0
		<![CDATA[and sysdate < schedule_end]]>
		) group by theater_name order by count desc
	</select>
	
	<select id="countPeopleBySido" resultType="ChartVO">
		select theater_sido text ,sum(schedule_time_count) count from(
		select * from last_info_view where schedule_time_count>0
		) group by theater_sido order by count desc
	</select>
	
	<select id="listByScheduleNo" resultType="LastInfoViewDto">
		select * from last_info_view where schedule_no = #{scheduleNo}
	</select>
	
	<select id="nowListByScheduleNo" resultType="LastInfoViewDto">
		select * from last_info_view where schedule_no = #{scheduleNo}
		and schedule_time_date_time>sysdate
	</select>
	
	
	
</mapper>