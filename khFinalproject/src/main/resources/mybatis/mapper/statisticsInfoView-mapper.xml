<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="statisticsInfoView">
	
	<select id="countByReservation" resultType="ChartVO">
		select movie_title text ,count(reservation_no) count from(
		select * from statistics_info_view where reservation_no>0 and reservation_status='결제완료'
		) group by movie_title order by count desc
	</select>
	
	<select id="countByGenderForMovie" resultType="ChartVO">
		SELECT member_gender text,
		count(reservation_no) count from(
		select * from statistics_info_view where movie_no=3 and reservation_status='결제완료'
		)GROUP BY member_gender
	</select>
	
	
	<select id="countByGenderForTotal" resultType="ChartVO">
		SELECT member_gender text,
		count(reservation_no) count from(
		select * from statistics_info_view where reservation_no>0 and reservation_status='결제완료'
		)GROUP BY member_gender
	</select>
	
	<select id="countByAgeForMoive" resultType="ChartVO">
		select text,count(*) count from
		(SELECT 
		CASE 
		     <![CDATA[WHEN extract(year from member_birth) - extract(year from sysdate) + 1 <= 14*365  Then '청소년']]>
		    WHEN extract(year from member_birth) - extract(year from sysdate) + 1 between 20*365 and 60*365  Then '일반'
		    Else '경로'
		end text
		FROM statistics_info_view where reservation_status='결제완료' and movie_no=3)
		group by text order by count desc
	</select>
	
	
	<select id="countByAgeForTotal" resultType="ChartVO">
		select text,count(*) count from
		(SELECT 
		CASE 
		    <![CDATA[WHEN extract(year from member_birth) - extract(year from sysdate) + 1 <= 14*365  Then '청소년']]>
		    WHEN extract(year from member_birth) - extract(year from sysdate) + 1 between 20*365 and 60*365  Then '일반'
		    Else '경로'
		end text
		FROM statistics_info_view where reservation_status='결제완료')
		group by text order by count desc
	</select>
	
</mapper>