<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="totalInfoView">
	<select id="list" resultType="TotalInfoViewDto">
		select * from total_info_view
	</select>
	
	<select id="listByMovie" parameterType="int" resultType="TotalInfoViewDto">
		select * from total_info_view where movie_no = #{movieNo}
	</select>

	<select id="getByscheduleNo" parameterType="int" resultType="TotalInfoViewDto">
		select * from total_info_view where schedule_no = #{scheduleNo}
	</select>
	
	<select id="listByTheater" parameterType="int" resultType="TotalInfoViewDto">
		select * from total_info_view where theater_no = #{theaterNo} 
	</select>

	<select id="nowList" parameterType="int" resultType="TotalInfoViewDto">
		select * from total_info_view where movie_no = #{movieNo}
		and schedule_end>sysdate
	</select>
	
	
	<select id="nowMoiveList" parameterType="int" resultType="int">
		select distinct(movie_no) from total_info_view 
		where schedule_end > sysdate order by movie_no asc
	</select>
	
	<select id="moiveListByPeriod" parameterType="map" resultType="int">
		select distinct(movie_no) from total_info_view 
		where schedule_end between to_date(#{scheduleStart},'YYYY-MM-DD')
		and to_date(#{scheduleEnd},'YYYY-MM-DD') order by movie_no asc
	</select>
	
</mapper>